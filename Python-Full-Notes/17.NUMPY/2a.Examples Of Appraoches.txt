-------------------
1) array():
------------------
 Examples:
 ------------------
 >>> import numpy as np
>>> lst=[10,20,30,40,50]
>>> print(lst,type(lst))----------[10, 20, 30, 40, 50] <class 'list'>
>>> a=np.array(lst)
>>> print(a,type(a))----------[10 20 30 40 50] <class 'numpy.ndarray'>
>>> a----------- array([10, 20, 30, 40, 50])
>>> a.dtype----------dtype('int32')
>>> b=np.array(lst,dtype=float)
>>> print(b,type(b))----[10. 20. 30. 40. 50.] <class 'numpy.ndarray'>
>>> b.dtype-------dtype('float64')
>>> print(b.dtype)-------float64
>>> c=np.array([100,200,300,400,500])
>>> print(c,type(c))-------[100 200 300 400 500] <class 'numpy.ndarray'>
>>> d=np.array([100,200,300,400,500],float)
>>> print(d,type(d))-----[100. 200. 300. 400. 500.] <class 'numpy.ndarray'>

>>> c=np.array([100,200,300,400,500])
>>> print(c,type(c))---[100 200 300 400 500] <class 'numpy.ndarray'>
>>> d=np.array([100,200,300,400,500],float)
>>> print(d,type(d))---[100. 200. 300. 400. 500.] <class 'numpy.ndarray'>
>>>
>>> lst=[10,12.34,56,78,2.3]
>>> print(lst,type(lst))---[10, 12.34, 56, 78, 2.3] <class 'list'>
>>> a=np.array(lst)
>>> print(a,type(a))---[10.   12.34 56.   78.    2.3 ] <class 'numpy.ndarray'>
>>> print(a.dtype)---float64
>>> a---------array([10.  , 12.34, 56.  , 78.  ,  2.3 ])
>>>
>>> lst=[10,12.34,56,78,2.3,"KVR"]
>>> print(lst,type(lst))---[10, 12.34, 56, 78, 2.3, 'KVR'] <class 'list'>
>>> a=np.array(lst)
>>> print(a,type(a),a.dtype)--['10' '12.34' '56' '78' '2.3' 'KVR'] <class 'numpy.ndarray'>							<U32
>>> a---array(['10', '12.34', '56', '78', '2.3', 'KVR'], dtype='<U32')
-------------------------------------------------------------------
>>> lst=[10,12.34,56,78,2.3,"KVR"]
>>> print(lst,type(lst))---[10, 12.34, 56, 78, 2.3, 'KVR'] <class 'list'>
>>> a=np.array(lst,dtype=object)
>>> print(a,type(a),a.dtype)
[10 'KVR' 34.56 (2+3j) True] <class 'numpy.ndarray'>    object
>>> a.dtype------dtype('O') ---- nothing but object only
--------------------------------------------------------------------------------------
>>> l=[10,20,30,40,50,60]
>>> print(l)----------------[10, 20, 30, 40, 50, 60]
>>> a=np.array(l)
>>> a-----------array([10, 20, 30, 40, 50, 60])
>>> print(a,type(a))-------[10 20 30 40 50 60] <class 'numpy.ndarray'>
>>> print(a.ndim)----1
>>> print(a.shape)----(6,)
>>>
>>>
>>> l1=[[10,20,30],[40,50,60],[70,80,90] ]
>>> print(l1)---[[10, 20, 30], [40, 50, 60], [70, 80, 90]]
>>> B=np.array(l1)
>>> B-----array([[10, 20, 30],
		          [40, 50, 60],
		           [70, 80, 90]])

>>> B.ndim----2
>>> B.shape-----(3, 3)

>>> l1=[ [[10,20],[30,40]],[[50,60],[70,80]] ]
>>> print(l1)----[[[10, 20], [30, 40]], [[50, 60], [70, 80]]]
>>> C=np.array(l1)
>>> C
		array([[[10, 20],
			[30, 40]],

		       [[50, 60],
			[70, 80]]])
>>> C.ndim--------3
>>> C.shape-------(2, 2, 2)
---------------------------------------------------------------------
>>> l1=[10,20,30,40,50,60,60,80,90,55,23,45]
>>> print(l1)----[10, 20, 30, 40, 50, 60, 60, 80, 90, 55, 23, 45]
>>> a=np.array(l1)
>>> a---array([10, 20, 30, 40, 50, 60, 60, 80, 90, 55, 23, 45])
>>> a.ndim----1
>>> a.shape---(12,)
>>> mat1=a.reshape(3,4)
>>> mat1
		array([[10, 20, 30, 40],
		       [50, 60, 60, 80],
		       [90, 55, 23, 45]])
>>> mat2=a.reshape(4,3)
>>> mat2
		array([[10, 20, 30],
		       [40, 50, 60],
		       [60, 80, 90],
		       [55, 23, 45]])
>>> mat3=a.reshape(6,2)
>>> mat3
		array([[10, 20],
		       [30, 40],
		       [50, 60],
		       [60, 80],
		       [90, 55],
		       [23, 45]])
>>> mat4=a.reshape(2,6)
>>> mat4
		array([[10, 20, 30, 40, 50, 60],
		       [60, 80, 90, 55, 23, 45]])
>>> mat5=a.reshape(2,3,2)
>>> mat5
		array([[[10, 20],
			[30, 40],
			[50, 60]],

		       [[60, 80],
			[90, 55],
			[23, 45]]])
>>> mat6=a.reshape(2,2,3)
>>> mat6
		array([[[10, 20, 30],
			[40, 50, 60]],

		       [[60, 80, 90],
			[55, 23, 45]]])
>>> mat7=a.reshape(3,2,2)
>>> mat7
		array([[[10, 20],
			[30, 40]],

		       [[50, 60],
			[60, 80]],

		       [[90, 55],
			[23, 45]]])

>>> mat7.ndim--------3
>>> mat7.shape--------(3, 2, 2)
>>> l1=[10,20,30,40,50,60,60,80,90,55,23,45]
>>> a=np.array(l1)
>>> a
array([10, 20, 30, 40, 50, 60, 60, 80, 90, 55, 23, 45])
>>> a.ndim----------1
>>> a.shape----------(12,)
>>> a.shape=(4,3)
>>> a
		array([[10, 20, 30],
		       [40, 50, 60],
		       [60, 80, 90],
		       [55, 23, 45]])
>>> a.shape=(2,3,2)
>>> a
		array([[[10, 20],
			[30, 40],
			[50, 60]],

		       [[60, 80],
			[90, 55],
			[23, 45]]])
>>> a.shape=(3,2,2)
>>> a
		array([[[10, 20],
			[30, 40]],

		       [[50, 60],
			[60, 80]],

		       [[90, 55],
			[23, 45]]])

>>> a.shape=(4,5)-----ValueError: cannot reshape array of size 12 into shape (4,5)
>>> a.reshape(3,5)----ValueError: cannot reshape array of size 12 into shape (3,5)
------------------------------------------------------------------------------------------
2) arange():
-----------------------
Examples:
-----------------------
>>> import numpy as np
>>> a=np.arange(10)
>>> print(a,type(a))------[0 1 2 3 4 5 6 7 8 9] <class 'numpy.ndarray'>
>>> a------array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
>>> a.ndim------1
>>> b=np.arange(10,21)
>>> print(b,type(b))----[10 11 12 13 14 15 16 17 18 19 20] <class 'numpy.ndarray'>
>>> b---------array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])
>>> b.ndim---1
>>> c=np.arange(100,131,2)
>>> print(c,type(c))--[100 102 104 106 108 110 112 114 116 118 120 122 124 126					128 130] <class 'numpy.ndarray'>
>>> c----array([100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124,
			126, 128, 130])
>>> c.ndim----1
>>> c.shape----(16,)
>>> a.reshape(2,5)
			array([[0, 1, 2, 3, 4],
			       [5, 6, 7, 8, 9]])
>>> a.reshape(5,2)
			array([[0, 1],
			       [2, 3],
			       [4, 5],
			       [6, 7],
			       [8, 9]])
>>> b.reshape(2,5)---ValueError: cannot reshape array of size 11 into shape (2,5)
>>> c.reshape(4,4)
			array([[100, 102, 104, 106],
			       [108, 110, 112, 114],
			       [116, 118, 120, 122],
			       [124, 126, 128, 130]])
>>> c.reshape(8,2)
			array([[100, 102],
			       [104, 106],
			       [108, 110],
			       [112, 114],
			       [116, 118],
			       [120, 122],
			       [124, 126],
			       [128, 130]])
>>> c.reshape(2,8)
			array([[100, 102, 104, 106, 108, 110, 112, 114],
			       [116, 118, 120, 122, 124, 126, 128, 130]])
>>> c.reshape(4,2,2)
			array([[[100, 102],
				[104, 106]],

			       [[108, 110],
				[112, 114]],

			       [[116, 118],
				[120, 122]],

			       [[124, 126],
				[128, 130]]])
>>> c.reshape(2,4,2)
			array([[[100, 102],
				[104, 106],
				[108, 110],
				[112, 114]],

			       [[116, 118],
				[120, 122],
				[124, 126],
				[128, 130]]])
>>> c.reshape(2,2,4)
			array([[[100, 102, 104, 106],
				[108, 110, 112, 114]],

			       [[116, 118, 120, 122],
				[124, 126, 128, 130]]])
---------------------------------------------------------------------------------------------
3) zeros():
----------------------
Examples:
----------------------
>>> import numpy as np
>>> a=np.zeros(4)
>>> print(a,type(a))----------[0. 0. 0. 0.] <class 'numpy.ndarray'>
>>> a=np.zeros(4,dtype=int)
>>> print(a,type(a))------[0 0 0 0] <class 'numpy.ndarray'>
>>> a.reshape(2,2)
			array([[0, 0],
			       [0, 0]])
>>> a.ndim-------1
>>> b=np.zeros( (4,3), dtype=int)
>>> print(b,type(b))---
				[[0 0 0]
				 [0 0 0]
				 [0 0 0]
				 [0 0 0]] <class 'numpy.ndarray'>
>>> c=np.zeros(shape=(3,3), dtype=int)
>>> print(c,type(c))
			[[0 0 0]
			 [0 0 0]
			 [0 0 0]] <class 'numpy.ndarray'>
>>> b.ndim---2
>>> c.ndim---2
>>> c=np.zeros(shape=(2,3,3), dtype=int)
>>> c
			array([[[0, 0, 0],
				[0, 0, 0],
				[0, 0, 0]],

			       [[0, 0, 0],
				[0, 0, 0],
				[0, 0, 0]]])
-----------------------------------------------------------------------------------------------
4) ones():
--------------
Examples:
--------------
>>> import numpy as np
>>> a=np.ones(6)
>>> print(a,type(a))--------[1. 1. 1. 1. 1. 1.] <class 'numpy.ndarray'>
>>> a=np.ones(6,dtype=int)
>>> print(a,type(a))-------[1 1 1 1 1 1] <class 'numpy.ndarray'>
>>> a.reshape(3,2)--------array([[1, 1],
       [1, 1],
       [1, 1]])
>>> a.reshape(2,3)
			array([[1, 1, 1],
			       [1, 1, 1]])
>>> b=np.ones( (4,5), dtype=int)
>>> print(b,type(b))
			[[1 1 1 1 1]
			 [1 1 1 1 1]
			 [1 1 1 1 1]
			 [1 1 1 1 1]] <class 'numpy.ndarray'>

>>> b.reshape(5,4)
			array([[1, 1, 1, 1],
			       [1, 1, 1, 1],
			       [1, 1, 1, 1],
			       [1, 1, 1, 1],
			       [1, 1, 1, 1]])
>>> b=np.ones( (3,2,2), dtype=int)
>>> print(b,type(b))
				[[[1 1]
				  [1 1]]

				 [[1 1]
				  [1 1]]

				 [[1 1]
				  [1 1]]] <class 'numpy.ndarray'>
---------------------------------------------------------------------------------------------
5) full():
-----------------
Examples:
-----------------
>>> import numpy as np
>>> a=np.full(4,5)
>>> print(a,type(a))-------[5 5 5 5] <class 'numpy.ndarray'>
>>> a.reshape(2,2)
			array([[5, 5],
			       [5, 5]])
>>> b=np.full( (4,3),8)
>>> print(b,type(b))
				[[8 8 8]
				 [8 8 8]
				 [8 8 8]
				 [8 8 8]] <class 'numpy.ndarray'>
>>> b.reshape(6,2)
			array([[8, 8],
			       [8, 8],
			       [8, 8],
			       [8, 8],
			       [8, 8],
			       [8, 8]])
>>> b=np.full( (3,4,3),12)
>>> print(b,type(b))
			[[[12 12 12]
			  [12 12 12]
			  [12 12 12]
			  [12 12 12]]

			 [[12 12 12]
			  [12 12 12]
			  [12 12 12]
			  [12 12 12]]

			 [[12 12 12]
			  [12 12 12]
			  [12 12 12]
			  [12 12 12]]] <class 'numpy.ndarray'>
>>> b=np.full(shape=(2,2),fill_value=5)
>>> print(b,type(b))
				[[5 5]
				 [5 5]] <class 'numpy.ndarray'>
>>> b=np.full(shape=(3,3),fill_value=0)
>>> print(b,type(b))
			[[0 0 0]
			 [0 0 0]
			 [0 0 0]] <class 'numpy.ndarray'>
>>> b=np.full(shape=(2,2),fill_value=1)
>>> print(b,type(b))
				[[1 1]
				 [1 1]] <class 'numpy.ndarray'>
-------------------------------------------------------------------------------------------------
6) eye():
-----------------
Examples:
-----------------
>>> import numpy as np
>>> a=np.eye(3)
>>> print(a,type(a))
		[[1. 0. 0.]
		 [0. 1. 0.]
		 [0. 0. 1.]] <class 'numpy.ndarray'>
>>> a=np.eye(3,dtype=int)
>>> print(a,type(a))
			[[1 0 0]
			 [0 1 0]
			 [0 0 1]] <class 'numpy.ndarray'>
>>> a=np.eye(3,4,dtype=int)
>>> print(a,type(a))
			[[1 0 0 0]
			 [0 1 0 0]
			 [0 0 1 0]] <class 'numpy.ndarray'>
>>> a=np.eye(4,3,dtype=int)
>>> print(a,type(a))
			[[1 0 0]
			 [0 1 0]
			 [0 0 1]
			 [0 0 0]] <class 'numpy.ndarray'>
>>> a=np.eye(6,5,dtype=int)
>>> print(a,type(a))
		[[1 0 0 0 0]
		 [0 1 0 0 0]
		 [0 0 1 0 0]
		 [0 0 0 1 0]
		 [0 0 0 0 1]
		 [0 0 0 0 0]] <class 'numpy.ndarray'>
>>> a=np.eye(5,6,dtype=int)
>>> print(a,type(a))
			[[1 0 0 0 0 0]
			 [0 1 0 0 0 0]
			 [0 0 1 0 0 0]
			 [0 0 0 1 0 0]
			 [0 0 0 0 1 0]] <class 'numpy.ndarray'>
>>> a=np.eye(6,6,dtype=int)
>>> print(a,type(a))
		[[1 0 0 0 0 0]
		 [0 1 0 0 0 0]
		 [0 0 1 0 0 0]
		 [0 0 0 1 0 0]
		 [0 0 0 0 1 0]
		 [0 0 0 0 0 1]] <class 'numpy.ndarray'>
>>> a=np.eye(5,6,k=-1,dtype=int)
>>> print(a,type(a))
		[[0 0 0 0 0 0]
		 [1 0 0 0 0 0]
		 [0 1 0 0 0 0]
		 [0 0 1 0 0 0]
		 [0 0 0 1 0 0]] <class 'numpy.ndarray'>
>>> a=np.eye(5,6,k=-2,dtype=int)
>>> print(a,type(a))
		[[0 0 0 0 0 0]
		 [0 0 0 0 0 0]
		 [1 0 0 0 0 0]
		 [0 1 0 0 0 0]
		 [0 0 1 0 0 0]] <class 'numpy.ndarray'>
>>> a=np.eye(5,6,k=-3,dtype=int)
>>> print(a,type(a))
		[[0 0 0 0 0 0]
		 [0 0 0 0 0 0]
		 [0 0 0 0 0 0]
		 [1 0 0 0 0 0]
		 [0 1 0 0 0 0]] <class 'numpy.ndarray'>
>>> a=np.eye(6,6,dtype=int)
>>> print(a,type(a))
		[[1 0 0 0 0 0]
		 [0 1 0 0 0 0]
		 [0 0 1 0 0 0]
		 [0 0 0 1 0 0]
		 [0 0 0 0 1 0]
		 [0 0 0 0 0 1]] <class 'numpy.ndarray'>
>>> a=np.eye(6,6,k=1,dtype=int)
>>> print(a,type(a))
			[[0 1 0 0 0 0]
			 [0 0 1 0 0 0]
			 [0 0 0 1 0 0]
			 [0 0 0 0 1 0]
			 [0 0 0 0 0 1]
			 [0 0 0 0 0 0]] <class 'numpy.ndarray'>
>>> a=np.eye(6,6,k=2,dtype=int)
>>> print(a,type(a))
			[[0 0 1 0 0 0]
			 [0 0 0 1 0 0]
			 [0 0 0 0 1 0]
			 [0 0 0 0 0 1]
			 [0 0 0 0 0 0]
			 [0 0 0 0 0 0]] <class 'numpy.ndarray'>
>>> a=np.eye(6,6,k=5,dtype=int)
>>> print(a,type(a))
			[[0 0 0 0 0 1]
			 [0 0 0 0 0 0]
			 [0 0 0 0 0 0]
			 [0 0 0 0 0 0]
			 [0 0 0 0 0 0]
			 [0 0 0 0 0 0]] <class 'numpy.ndarray'>
>>> a=np.eye(6,6,k=6,dtype=int)
>>> print(a,type(a))
			[[0 0 0 0 0 0]
			 [0 0 0 0 0 0]
			 [0 0 0 0 0 0]
			 [0 0 0 0 0 0]
			 [0 0 0 0 0 0]
			 [0 0 0 0 0 0]] <class 'numpy.ndarray'>
-----------------------------------------------------------------------------------------------------
7) identity():
-----------------------------------------------------------------------------------------------------
----------------
Examples:
----------------
>>> import numpy as np
>>> a=np.identity(3)
>>> print(a,type(a))
		[[1. 0. 0.]
		 [0. 1. 0.]
		 [0. 0. 1.]] <class 'numpy.ndarray'>
>>> a=np.identity(3,dtype=int)
>>> print(a,type(a))
			[[1 0 0]
			 [0 1 0]
			 [0 0 1]] <class 'numpy.ndarray'>
>>> a=np.identity(3,4)---TypeError: Cannot interpret '4' as a data type
>>> a=np.identity(5,dtype=int)
>>> a
	array([[1, 0, 0, 0, 0],
	       [0, 1, 0, 0, 0],
	       [0, 0, 1, 0, 0],
	       [0, 0, 0, 1, 0],
	       [0, 0, 0, 0, 1]])
=============================X=================================